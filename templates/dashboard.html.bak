<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="refresh" content="120">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Pi Dashboard</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body class="bg-dark text-light">
  <div class="container mt-4">
    <h1 class="mb-4">🖥 Pi System Dashboard</h1>

    <!-- System Info -->
    <div class="card bg-dark border-secondary mb-4">
      <div class="card-body">
        <h5 class="card-title">📊 System Info</h5>
        <ul class="list-group list-group-flush">
          <li class="list-group-item bg-secondary text-light">🌡 CPU Temp: {{ info.cpu_temp }}</li>
          <li class="list-group-item bg-secondary text-light">🕒 Uptime: {{ info.uptime }}</li>
          <li class="list-group-item bg-secondary text-light">📅 Timestamp: {{ info.timestamp }}</li>
        </ul>
      </div>
    </div>

    <!-- Weather Info -->
    <h2 class="mt-5">🌦️ Outdoor Weather</h2>
    {% if weather.error %}
      <div class="alert alert-danger">❗ Weather API Error: {{ weather.error }}</div>
    {% else %}
    <div class="card bg-dark text-light mb-4">
      <div class="card-header">📍 {{ weather.city }}, {{ weather.country }}</div>
      <div class="card-body">
        <div class="row">
          <div class="col-md-4 text-center">
            <img src="https://openweathermap.org/img/wn/{{ weather.icon }}@2x.png" alt="Weather Icon">
            <p><strong>{{ weather.condition_main }}</strong><br>{{ weather.condition_desc }}</p>
          </div>
          <div class="col-md-8">
            <ul class="list-group list-group-flush">
              <li class="list-group-item bg-secondary text-light">🌡️ Temp: {{ weather.temp }} °C (Feels like: {{ weather.feels_like }} °C)</li>
              <li class="list-group-item bg-secondary text-light">💧 Humidity: {{ weather.humidity }}%</li>
              <li class="list-group-item bg-secondary text-light">📈 Pressure: {{ weather.pressure }} hPa</li>
              <li class="list-group-item bg-secondary text-light">💨 Wind: {{ weather.wind_speed }} m/s at {{ weather.wind_deg }}°</li>
              <li class="list-group-item bg-secondary text-light">🌅 Sunrise: {{ weather.sunrise }} | 🌇 Sunset: {{ weather.sunset }}</li>
              {% if weather.is_thunderstorm %}
              <li class="list-group-item bg-danger text-light">⚡ <strong>Thunderstorm Detected!</strong></li>
              {% endif %}
            </ul>
          </div>
        </div>
      </div>
    </div>
    {% endif %}

    <!-- Chart Tabs -->
    <h2 class="mt-5">📈 Weather Trends</h2>
    <ul class="nav nav-tabs mb-3" id="chartTabs" role="tablist">
      <li class="nav-item" role="presentation">
        <button class="nav-link active" id="tri-tab" data-bs-toggle="tab" data-bs-target="#tri" type="button" role="tab">🌡️ Tri-Chart</button>
      </li>
      <li class="nav-item" role="presentation">
        <button class="nav-link" id="wind-tab" data-bs-toggle="tab" data-bs-target="#wind" type="button" role="tab">💨 Wind Speed</button>
      </li>
      <li class="nav-item" role="presentation">
        <button class="nav-link" id="pressure-tab" data-bs-toggle="tab" data-bs-target="#pressure" type="button" role="tab">📈 Barometric Pressure</button>
      </li>
    </ul>
    <div class="tab-content">
      <div class="tab-pane fade show active" id="tri" role="tabpanel">
        <canvas id="triChart"></canvas>
      </div>
      <div class="tab-pane fade" id="wind" role="tabpanel">
        <canvas id="windChart"></canvas>
      </div>
      <div class="tab-pane fade" id="pressure" role="tabpanel">
        <canvas id="pressureChart"></canvas>
      </div>
    </div>

    <footer class="text-muted mt-5 mb-3 text-center">Built with Flask on Raspberry Pi</footer>
  </div>

  <!-- Chart JS -->
  <script>
    const labels = {{ labels | tojson }};
    const temps = {{ temps | tojson }};
    const feels = {{ feels | tojson }};
    const hums = {{ hums | tojson }};
    const wind = {{ wind | tojson }};
    const pressure = {{ pressure | tojson }};

    new Chart(document.getElementById('triChart'), {
      type: 'line',
      data: {
        labels: labels,
        datasets: [
          { label: 'Temp (°C)', data: temps, borderColor: 'orange', fill: false },
          { label: 'Feels Like (°C)', data: feels, borderColor: 'red', fill: false },
          { label: 'Humidity (%)', data: hums, borderColor: 'blue', fill: false }
        ]
      },
      options: {
        plugins: { legend: { labels: { color: 'white' } } },
        scales: { x: { ticks: { color: 'white' } }, y: { ticks: { color: 'white' } } }
      }
    });

    new Chart(document.getElementById('windChart'), {
      type: 'line',
      data: {
        labels: labels,
        datasets: [{ label: 'Wind Speed (m/s)', data: wind, borderColor: 'aqua', fill: false }]
      },
      options: {
        plugins: { legend: { labels: { color: 'white' } } },
        scales: { x: { ticks: { color: 'white' } }, y: { ticks: { color: 'white' } } }
      }
    });

    new Chart(document.getElementById('pressureChart'), {
      type: 'line',
      data: {
        labels: labels,
        datasets: [{ label: 'Pressure (hPa)', data: pressure, borderColor: 'lime', fill: false }]
      },
      options: {
        plugins: { legend: { labels: { color: 'white' } } },
        scales: { x: { ticks: { color: 'white' } }, y: { ticks: { color: 'white' } } }
      }
    });
  </script>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
